---
description: >
  V2 THEME: Freedom-first, distinctness HARD MODE.
  Must invent new layouts & components. No reuse of baseline JSX or long className strings.
  Enforce a new container/spacing system and a new Hero structure.

globs:
  - "components/themes/cms-default-theme/**"
alwaysApply: true
---

# ‚úÖ HARD CONTRACTS (do not break)
- Do NOT modify: `main.js`.
- Keep `register-blocks.tsx` exporting `themeRegistry` (existing keys must remain; you may add keys or remap to V2 components).
- `ui/Header.tsx` prop shape must remain unchanged and **must** render:
  - [data-mobile-menu-button]
  - [data-mobile-menu]
  - [data-mobile-menu-overlay]
- Components are props-only (no fetching). Preserve any other data-* hooks used by `main.js`.

# üß≠ GOAL
- Produce a **new DOM structure** and **new layout logic** for every remapped block.
- Create a new home template: `page-templates/HomeV2.tsx` composing **only** V2 sections.
- Use a **single shell container** class for width control; sections must not add their own global container wrappers.

# üß© REGISTRY (required remaps; keep old keys present)
- "Header"   -> `HeaderV2`
- "Hero"     -> `HeroV2`
- "Features" -> `FeatureGridV2`
- "Footer"   -> `FooterV2`
- Add ‚â•3 new blocks (free choice), e.g. `StatsBandV2`, `LogosMarqueeV2`, `TestimonialMasonryV2`, `CTAAsideV2`.

# ‚õî ANTI-SAMENESS (strict)
- **No copy/paste** of baseline JSX fragments or long className strings.
- **Do not emit** any of these container patterns (case-insensitive, substring match):
  - "max-w-screen-xl", "max-w-7xl", "container mx-auto", "px-4 sm:px-6 lg:px-8"
- **Structure must change** in ‚â•6 dimensions across the page:
  1) Different wrapper count / nesting depth
  2) Different layout primitive (grid ‚Üî flex; named areas vs equal cols)
  3) Different container strategy (CSS vars + clamp) ‚Äî no Tailwind ‚Äúcontainer‚Äù
  4) Different spacing rhythm (section paddings and gaps)
  5) Reordered content hierarchy within sections
  6) Different media treatment (placement/aspect/overflow/interaction)
- **HeroV2** must be structurally distinct from baseline:
  - Use **CSS Grid with named areas** (or a split-panel layout) if baseline used stacked flex.
  - Introduce at least one **new region** (e.g., CTA rail, metrics strip, sticky media).
  - Change the **content order** (e.g., H1 before eyebrow; buttons before copy).

# üéõ CONTAINER & SPACING SYSTEM (must implement)
- Define the shell and section rhythm using CSS variables; consume via Tailwind arbitrary values.
- Only the page shell controls width; sections **must not** add another `mx-auto`/container.

# üîß TOKEN & THEME WIRING (must implement)
- Add to `styles.css` under `:root`:
  - `--shell-max`, `--container-x`, `--section-y`, `--gap-y`, `--brand`, `--accent`, `--radius-lg`
- In `tailwind.config.ts` `theme.extend`:
  - colors: `brand`, `accent` via `rgb(var(--brand)/<alpha-value>)`
  - spacing: `{ container: 'var(--container-x)' }`
  - borderRadius: `{ lg: 'var(--radius-lg)' }`
- Use tokens in components (e.g., `px-[var(--container-x)]`, `gap-[var(--gap-y)]`, `rounded-[var(--radius-lg)]`).

# üèó REQUIRED FILES TO (RE)GENERATE
- `components/themes/cms-default-theme/page-templates/HomeV2.tsx`
  - Renders a `<div className="v2-shell">` root; inside it, a single width container: `<div className="v2-container">`.
  - Composes only V2 sections in `<main className="v2-main space-y-[var(--section-y)]">`.
- `components/themes/cms-default-theme/ui/HeaderV2.tsx`
  - Keep prop shape identical; render the three required data-* hooks.
- `components/themes/cms-default-theme/ui/HeroV2.tsx`
  - New structure (see Anti-sameness).
- `components/themes/cms-default-theme/ui/FeatureGridV2.tsx`
- `components/themes/cms-default-theme/ui/FooterV2.tsx`
- Plus ‚â•3 brand-new sections of your choice.

# üß™ VALIDATION (generator must ensure before finishing)
- `register-blocks.tsx` shows the remaps and **imports the V2 components**.
- `HomeV2.tsx` imports **only** V2 components, wrapped in `.v2-shell > .v2-container > .v2-main`.
- No className contains forbidden container substrings listed above.
- `HeaderV2` renders `[data-mobile-menu-button]`, `[data-mobile-menu]`, `[data-mobile-menu-overlay]`.

# üñºÔ∏è LAYOUT SPEC (reference ‚Äî implement, don‚Äôt quote)
- `.v2-shell` sets container width: `--container-width: min(var(--shell-max), 100vw - 2*var(--container-x))`.
- `.v2-container` centers once: `max-w-[var(--container-width)] mx-auto px-[var(--container-x)]`.
- Sections derive rhythm: `py-[var(--section-y)]` and internal `gap-[var(--gap-y)]`.

# üì£ SELF-CHECK (must `console.log` once on dev/build)
- Print 6‚Äì10 **structural** changes (not color/typography).
- Print component inventory:
  - `new`: all *V2* components created
  - `modified`: originals touched (should be minimal)
  - `kept`: originals still present
  - `registryRemaps`: map of old key ‚Üí V2 component
- Confirm header hooks (echo the query selectors).
- Brief rationale (3‚Äì5 lines) for why the new layout suits the domain.

# üß© QUICK STUBS THE GENERATOR SHOULD USE (do not copy baseline)
- Shell (applied at top-level page component):
  - `<div className="v2-shell"><div className="v2-container"><main className="v2-main space-y-[var(--section-y)]">‚Ä¶</main></div></div>`
- HeroV2:
  - Grid with named areas (e.g., `"title media" "meta media" "cta media"`), or split with sticky media column.
  - Buttons **before** body copy; optional metric/eyebrow inline with title.
- FeatureGridV2:
  - Asymmetric CSS grid (named areas or variable spans), not equal columns.
- FooterV2:
  - Three-region layout: newsletter rail, link clusters grid, legal column.

# üö´ FALLBACKS TO AVOID
- Do not render Tailwind `container` class anywhere.
- Do not reintroduce nested `mx-auto` wrappers inside sections.
- Do not reproduce baseline hero DOM order or media placement.

# ‚úÖ EXAMPLE SELF-CHECK OUTPUT (shape)
# {
#   "structuralChanges": [
#     "Hero: stack ‚Üí grid with sticky media; new CTA rail; content order changed",
#     "Shell: single width controller via CSS vars; removed nested containers",
#     "Features: equal-cols ‚Üí named-area grid with variable spans",
#     "Spacing: global section rhythm via --section-y/--gap-y; removed per-section padding",
#     "Footer: multi-region grid with newsletter rail",
#     "Added marquee/testimonial bands with independent wrappers"
#   ],
#   "inventory": {
#     "new": ["HeaderV2","HeroV2","FeatureGridV2","FooterV2","StatsBandV2","LogosMarqueeV2","TestimonialMasonryV2"],
#     "modified": [],
#     "kept": ["Header","Hero","Features","Footer"],
#     "registryRemaps": { "Header":"HeaderV2","Hero":"HeroV2","Features":"FeatureGridV2","Footer":"FooterV2" }
#   },
#   "headerHooksConfirmed": ["[data-mobile-menu-button]","[data-mobile-menu]","[data-mobile-menu-overlay]"],
#   "rationale": "Asymmetric layouts improve scan paths, single-shell container prevents spacing drift, and the new hero elevates narrative with sticky media and early CTAs."
# }
